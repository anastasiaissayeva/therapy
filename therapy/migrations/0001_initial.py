# Generated by Django 4.2 on 2024-12-25 05:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClinicalCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Возраст')),
                ('refined_diagnosis', models.CharField(blank=True, max_length=255, null=True, verbose_name='Подробный диагноз')),
                ('radiation_therapy_type', models.CharField(blank=True, choices=[('Фотонная', 'Ф'), ('Нейтронная', 'Н')], max_length=100, null=True, verbose_name='Вид лучевой терапии')),
                ('number_of_fractions', models.IntegerField(blank=True, null=True, verbose_name='Количество фракций')),
                ('single_dose', models.FloatField(blank=True, null=True, verbose_name='Разовая очаговая доза')),
                ('treatment_duration', models.IntegerField(blank=True, null=True, verbose_name='Длительность лечения(дней)')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
            ],
            options={
                'verbose_name': 'Клинический случай',
                'verbose_name_plural': 'Клинические случаи',
            },
        ),
        migrations.CreateModel(
            name='Complication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True, verbose_name='Название осложнения')),
                ('alt_name', models.TextField(blank=True, null=True, verbose_name='Альтернативное название осложнения')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
            ],
            options={
                'verbose_name': 'Осложнение',
                'verbose_name_plural': 'Осложнения',
            },
        ),
        migrations.CreateModel(
            name='DataSetName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True, verbose_name='Название')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
            ],
            options={
                'verbose_name': 'Наименование набора данных',
                'verbose_name_plural': 'Наименования наборов данных',
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, unique=True, verbose_name='Код МКБ-10')),
                ('description', models.TextField(verbose_name='Описание диагноза')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
            ],
            options={
                'verbose_name': 'Диагноз',
                'verbose_name_plural': 'Диагнозы',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Полное название')),
                ('short_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Сокращенное название')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
            ],
            options={
                'verbose_name': 'Локализация',
                'verbose_name_plural': 'Локализации',
            },
        ),
        migrations.CreateModel(
            name='ModelName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название модели')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Полное название модели')),
                ('model_type', models.CharField(blank=True, choices=[('Tumor Control Probability', 'TCP'), ('Normal Tissue Complication Probability', 'NTCP')], max_length=100, null=True, verbose_name='Тип модели')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
            ],
            options={
                'verbose_name': 'Модель',
                'verbose_name_plural': 'Модели',
            },
        ),
        migrations.CreateModel(
            name='ModelStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
                ('complication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.complication', verbose_name='Осложнение')),
                ('model_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='therapy.modelname', verbose_name='Модель')),
            ],
            options={
                'verbose_name': 'Структура модели',
                'verbose_name_plural': 'Структуры моделей',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=50, unique=True, verbose_name='Идентификатор')),
                ('gender', models.CharField(choices=[('Мужчина', 'М'), ('Женщина', 'Ж'), ('Другой', 'Д')], max_length=7, verbose_name='Пол')),
            ],
        ),
        migrations.CreateModel(
            name='RiskGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Название риска')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Описание риска')),
            ],
            options={
                'verbose_name': 'Риск',
                'verbose_name_plural': 'Риски',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название источника')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='Полное название источника')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ссылка на источник')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
            ],
            options={
                'verbose_name': 'Источник',
                'verbose_name_plural': 'Источники',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Название стадии')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Описание стадии')),
            ],
            options={
                'verbose_name': 'Стадия',
                'verbose_name_plural': 'Стадии',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Ед. изм.')),
                ('full_name', models.TextField(blank=True, null=True, verbose_name='Полное название')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
        ),
        migrations.CreateModel(
            name='SpecLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Уточненная локализация')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.location', verbose_name='Локализация')),
            ],
            options={
                'verbose_name': 'Уточненная локализация',
                'verbose_name_plural': 'Уточненные локализации',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(verbose_name='Полученное значение')),
                ('upper_value', models.FloatField(verbose_name='Верхняя граница')),
                ('lower_value', models.FloatField(verbose_name='Нижняя граница')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
                ('model_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='therapy.modelstructure', verbose_name='Структура моделей')),
            ],
            options={
                'verbose_name': 'Результат измерения',
                'verbose_name_plural': 'Результаты измерений',
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название параметра')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Полное название параметра')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='therapy.unit', verbose_name='Ед. изм.')),
            ],
            options={
                'verbose_name': 'Параметр',
                'verbose_name_plural': 'Параметры',
            },
        ),
        migrations.AddField(
            model_name='modelstructure',
            name='parameter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='therapy.parameter', verbose_name='Параметр'),
        ),
        migrations.AddField(
            model_name='modelstructure',
            name='risk_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.riskgroup', verbose_name='Группа риска'),
        ),
        migrations.AddField(
            model_name='modelstructure',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.stage', verbose_name='Стадия'),
        ),
        migrations.CreateModel(
            name='DataSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Доп. информация')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='therapy.datasetname', verbose_name='Наименование набора данных')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='therapy.result', verbose_name='Результат')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.source', verbose_name='Источник')),
                ('сlinical_сase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.clinicalcase', verbose_name='Клинический случай')),
            ],
            options={
                'verbose_name': 'Набор данных',
                'verbose_name_plural': 'Наборы данных',
            },
        ),
        migrations.AddField(
            model_name='complication',
            name='spec_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.speclocation', verbose_name='Уточненная локализация'),
        ),
        migrations.AddField(
            model_name='clinicalcase',
            name='diagnosis',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.diagnosis', verbose_name='МКБ10'),
        ),
        migrations.AddField(
            model_name='clinicalcase',
            name='patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.patient', verbose_name='Пациент'),
        ),
        migrations.AddField(
            model_name='clinicalcase',
            name='spec_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='therapy.speclocation', verbose_name='Уточненная локализация'),
        ),
    ]
